spring.application.name=api-gateway

# Enable Eureka equivalent to @EnableEurekaClient
spring.cloud.gateway.discovery.locator.enabled=true

# Load balanced mode
spring.cloud.loadbalancer.ribbon.enabled=false

spring.cloud.gateway.routes[0].id=product-service
# Using load balancer to get uri
spring.cloud.gateway.routes[0].uri=lb://PRODUCT-SERVICE
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/products/**


spring.cloud.gateway.routes[1].id=booking-service
spring.cloud.gateway.routes[1].uri=lb://BOOKING-SERVICE
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/bookings/**


# Generate random name for each instance
eureka.instance.instance-id=${spring.application.name}:${random.uuid}

#configuration for connecting to keycloak server
spring.security.oauth2.client.provider.keycloak.issuer-uri=http://server:9090/auth/realms/microservices-realm
spring.security.oauth2.client.registration.spring-cloud-gateway-client.client-id=spring-cloud-gateway-client
spring.security.oauth2.client.registration.spring-cloud-gateway-client.client-secret=Vl55zwUfF61R8qxZjqKlfgFzk8liz3Qr
spring.security.oauth2.client.registration.spring-cloud-gateway-client.provider=keycloak
spring.security.oauth2.client.registration.spring-cloud-gateway-client.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.spring-cloud-gateway-client.redirect-uri=http://localhost:8080/login/oauth2/code/spring-cloud-gateway-client